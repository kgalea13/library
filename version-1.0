//Superclass or Parent class: Media
class Media {
    constructor(title){
      this._title = title;
      this._isCheckedOut = false;
      this._ratings = []
    }
  
    get title(){
      return this._title;
    }
  
    get isCheckedOut(){
      return this._isCheckedOut;
    }
  
    get ratings(){
      return this._ratings;
    }
  
    toggleCheckOutStatus(){
      this.isCheckedOut = !this.isCheckedOut;   
      } 
  
    getAverageRating(){
      let ratingSum = this.ratings.reduce((accumulator, rating) =>
        accumulator + rating)
        return ratingSum/this.ratings.length;
  }
  
    addRating(value){
      this.ratings.push(value);
    }
  
      set isCheckedOut(checkedOut){
     this._isCheckedOut = checkedOut;
    }
  }
  
  //Child Class or Subclass: Book
  class Book extends Media {
    constructor(author,title, pages){
      super(title);
      this._author = author;
      this._pages = pages;
    }
    get author(){
      return this._author;
    }
  
    get pages(){
      return this._pages;
    }
  }
  
  //Child class or Subclass: Movie
  class Movie extends Media {
    constructor(title, director, runTime){
      super(title);
      this._director = director;
      this._runTime = runTime;
    }
  
    get director(){
      return this._director;
    }
  
    get runTime(){
      return this._runTime;
    }
  }
  
  //Book instance or a Book object created from the book sub class.
  const historyOfEverything = new Book('Bill Bryson', 'A Short History of Nearly Everything', 544);
  
  historyOfEverything.toggleCheckOutStatus();
  console.log(historyOfEverything.isCheckedOut);
  
  historyOfEverything.addRating(4);
  historyOfEverything.addRating(5);
  historyOfEverything.addRating(5);
  
  console.log(historyOfEverything.ratings);
  console.log(historyOfEverything.getAverageRating());
  
  
  
  
